/* -----------------------------------------------------------------------------
  # Utility Classes
----------------------------------------------------------------------------- */
// Make something round
// -----------------------------------------------------------------------------
.round {
  border-radius: 0.3em;
}

// Display an element as a block level element
// -----------------------------------------------------------------------------
.block {
  display: block;
  width: 100%;
}

// An empty spatial divider
// -----------------------------------------------------------------------------
.empty {
  margin: 20px 0;
  height: 1px;
}

// Responsive media
// -----------------------------------------------------------------------------
img.responsive,
video.responsive,
iframe.responsive,
embed.responsive,
object.responsive {
  max-width: 100%;
  height: auto;
}

// Responsive embed
// -----------------------------------------------------------------------------
.embed {
  position: relative;
  padding-bottom: 56.25%; // 16:9 by default
  height: 0;
  overflow: hidden;

  &.is-4by3 { // 4:3
    padding-bottom: 75%;
  }

  iframe,
  object,
  embed,
  video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// A defined section of content
// -----------------------------------------------------------------------------
.section {
  padding: 40px 0; //TODO: convert to rem

  + .section {
    padding-top: 0;
  }
}

// A standard max-width container
// -----------------------------------------------------------------------------
.container {
  position: relative;
  width: 90%;
  max-width: 75em;
  margin-left: auto;
  margin-right: auto;
}

// Push something out of the viewport
// -----------------------------------------------------------------------------
.off-screen {
  &-top {
    transform: translateY(-100vh);
  }

  &-bottom {
    transform: translateY(100vh);
  }

  &-left {
    transform: translateX(-100vh);
  }

  &-right {
    transform: translateX(100vh);
  }
}

// Open modifier. Not intended for direct use in HTML, but instead should only be added/removed via JavaScript
// -----------------------------------------------------------------------------
.is-open {
  display: block;
}

// Closed modifier. Not intended for direct use in HTML, but instead should only be added/removed via JavaScript
// -----------------------------------------------------------------------------
.is-closed {
  display: none;
}
